name: Create and publish Docker Compose stack to ghcr

on:
  workflow_run:
    workflows: ["Run Tests"]
    types:
      - completed

env:
  REGISTRY: ghcr.io
  BACKEND_IMAGE_NAME: ${{ github.repository }}-backend
  FRONTEND_IMAGE_NAME: ${{ github.repository }}-frontend

jobs:
  build-and-push-images:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get latest tag and commit distance
        id: get_version_info
        run: |
          # Get the latest tag
          LATEST_TAG=$(git describe --tags --abbrev=0)

          # Remove 'v' prefix from latest tag
          BASE_VERSION=${LATEST_TAG#v}

          # Get the number of commits since the last tag
          COMMIT_DISTANCE=$(git rev-list --count ${LATEST_TAG}..HEAD)

          # Construct new version with build number
          NEW_VERSION="${BASE_VERSION}.${COMMIT_DISTANCE}"

          echo "version=${NEW_VERSION}" >> $GITHUB_OUTPUT
          echo "Generated version: ${NEW_VERSION}"

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Build and push backend image
      - name: Extract metadata for Backend
        id: meta-backend
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.BACKEND_IMAGE_NAME }}
          tags: |
            type=raw,value=${{ steps.get_version_info.outputs.version }}
            type=raw,value=latest

      - name: Build and push Backend image
        id: push-backend
        uses: docker/build-push-action@v5
        with:
          context: ./backend/api
          file: ./backend/api/Dockerfile
          push: true
          tags: ${{ steps.meta-backend.outputs.tags }}
          labels: ${{ steps.meta-backend.outputs.labels }}
          build-args: |
            DATABASE_URL=postgresql://admin:saisab@postgres:5432/rust_sqlx?schema=public

      # Build and push frontend image
      - name: Extract metadata for Frontend
        id: meta-frontend
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.FRONTEND_IMAGE_NAME }}
          tags: |
            type=raw,value=${{ steps.get_version_info.outputs.version }}
            type=raw,value=latest

      - name: Build and push Frontend image
        id: push-frontend
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta-frontend.outputs.tags }}
          labels: ${{ steps.meta-frontend.outputs.labels }}
          build-args: |
            API_URL=http://backend:8000
            NODE_ENV=production
